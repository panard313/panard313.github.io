===================
块IO控制器
===================

总览
========
cgroup子系统“ blkio”实现了块io控制器。好像有
需要各种IO控制策略（例如比例带宽，最大带宽）
在存储层次结构中的叶节点和中间节点都可以。
计划对blkio控制器使用相同的基于cgroup的管理界面
并根据用户选项在后台切换IO策略。

一种IO控制策略是限制策略，可用于
指定设备上的IO速率上限。该政策在
通用块层，可以在叶节点以及更高节点上使用
设备映射程序之类的逻辑设备。

如何
=====
节流/上限策略
-----------------------------
-启用块IO控制器：：

CONFIG_BLK_CGROUP = y

-在块层启用节流：

CONFIG_BLK_DEV_THROTTLING = y

-挂载blkio控制器（请参阅cgroups.txt，为什么需要cgroup？）：

        挂载-t cgroup -o blkio无/ sys / fs / cgroup / blkio

-在特定设备上为根组指定带宽速率。格式
  策略为“ <主要>：<次要> <字节每秒”> ::

        回声“ 8:16 1048576”> /sys/fs/cgroup/blkio/blkio.throttle.read_bps_device

  上面将根组的读取限制为每秒1MB
  在具有主要/次要号码8:16的设备上。

-运行dd读取文件，查看速率是否已限制为1MB / s：

        ＃dd iflag =直接if = / mnt / common / zerofile of = / dev / null bs = 4K count = 1024
        中有1024 + 0条记录
        1024 + 0条记录
        复制了4194304字节（4.2 MB），4.0001 s，1.0 MB / s

 可以使用blkio.throttle.write_bps_device文件设置写入限制。

分层Cgroup
====================

节流实现层次结构支持；然而，
如果“ sane_behavior”为
从cgroup端启用，目前这是一个开发选项，
不公开可用。

如果有人创建了如下的层次结构：

根
/ \
test1 test2
|
测试3

用“ sane_behavior”进行节流将处理
层次结构正确。对于节流，所有限制都适用
到整个子树，而所有统计信息都在IO本地
由该cgroup中的任务直接生成。

在cgroup端未启用“ sane_behavior”的情况下进行节流
几乎在所有级别上都像对待
以下：：

枢
///
根测试1测试2测试3

各种用户可见的配置选项
==================================
CONFIG_BLK_CGROUP
-块IO控制器。

CONFIG_BFQ_CGROUP_DEBUG
-调试帮助。现在，cgroup中显示了一些其他统计文件
如果启用此选项。

CONFIG_BLK_DEV_THROTTLING
-在块层中启用块设备节流支持。

cgroup文件的详细信息
=======================
比例权重策略文件
--------------------------------
-blkio.weight
-指定每个cgroup的权重。这是组的默认权重
在所有设备上，直到且除非被每个设备规则覆盖。
（请参阅blkio.weight_device）。
当前允许的权重范围是10到1000。

-blkio.weight_device
-可以使用此接口为每个设备的每个cgroup指定规则。
这些规则将覆盖指定的组权重的默认值
通过blkio.weight。

格式如下：

＃echo dev_maj：dev_minor重量> blkio.weight_device

在此cgroup中的/ dev / sdb（8:16）上配置weight = 300：

＃回声8:16 300> blkio.weight_device
＃猫blkio.weight_device
开发权重
8:16 300

在此cgroup的/ dev / sda（8：0）上配置weight = 500 ::

＃echo 8：0 500> blkio.weight_device
＃猫blkio.weight_device
开发权重
8：0 500
8:16 300

在此cgroup中删除/ dev / sda的特定权重：

＃echo 8：0 0> blkio.weight_device
＃猫blkio.weight_device
开发权重
8:16 300

-blkio.time
-每个设备分配给cgroup的磁盘时间（以毫秒为单位）。第一
两个字段指定设备的主要和次要编号，
第三个字段指定分配给组的磁盘时间
毫秒。

-blkio.sectors
-组从磁盘传输到磁盘或从磁盘传输的扇区数。第一
两个字段指定设备的主要和次要编号，
第三个字段指定由
与设备进行分组。

-blkio.io_service_bytes
-组从磁盘传输到磁盘或从磁盘传输的字节数。这些
按操作类型进一步划分-读取或写入，同步
或异步。前两个字段指定
设备，第三个字段指定操作类型，第四个字段
指定字节数。

-blkio.io_serviced
-该组向磁盘发布的IO（生物）数量。这些
按操作类型进一步划分-读取或写入，同步
或异步。前两个字段指定
设备，第三个字段指定操作类型，第四个字段
指定IO的数量。

-blkio.io_service_time
-从请求分派到请求完成之间的总时间
该cgroup完成的IO。这是十亿分之一秒
对闪存设备也有意义。对于队列深度为1的设备，
该时间代表实际服务时间。当queue_depth> 1时
这不再是正确的，因为可能会无序提供请求。这个
可能导致给定IO的服务时间包括服务时间
多个IO出现故障时可能导致总数
io_service_time>实际经过的时间。这段时间再除以
操作类型-读取或写入，同步或异步。前两个领域
指定设备的主要和次要编号，第三个字段
指定操作类型，第四个字段指定
io_service_time（以ns为单位）。

-blkio.io_wait_time
-此cgroup的IO花费在等待中的总时间
服务的调度程序队列。这可以大于总时间
由于它是所有IO的io_wait_time累积时间，因此已过去。这不是一个
cgroup等待总时间的量度，而是
其各个IO的wait_time。对于queue_depth> 1的设备
此指标不包括等待服务一次所花费的时间
IO已分派到设备，但直到它得到实际维修为止
（由于对请求的重新排序，此处可能会有时间滞后
设备）。这是十亿分之一秒，使其对闪存有意义
设备。该时间进一步除以操作类型-
读取或写入，同步或异步。前两个字段指定专业和
设备的次编号，第三个字段指定操作类型
第四个字段以ns为单位指定io_wait_time。

-blkio.io_merged
-合并到属于此请求的BIOS /请求的总数
cgroup。除以操作类型-读或
写，同步或异步。

-blkio.io_queued
-为此，在任何给定时刻排队的请求总数
cgroup。除以操作类型-读或
写，同步或异步。

-blkio.avg_queue_size
-仅在CONFIG_BFQ_CGROUP_DEBUG = y时启用调试辅助。
此cgroup在整个过程中的平均队列大小
cgroup的存在。每次
此cgroup的队列获取时间片。

-blkio.group_wait_time
-仅在CONFIG_BFQ_CGROUP_DEBUG = y时启用调试辅助。
这是cgroup自变得繁忙以来必须等待的时间
（即，从0到1的请求已排队）以获取以下项之一的时间片
它的队列。这与io_wait_time不同，后者是
该cgroup中每个IO花费的时间总计
在调度程序队列中等待。以纳秒为单位。如果这是
在cgroup处于等待（用于时间片）状态时读取stat
只会报告直到最后一次累积的group_wait_time
有时间片，将不包括当前增量。

-blkio.empty_time
-仅在CONFIG_BFQ_CGROUP_DEBUG = y时启用调试辅助。
这是cgroup在没有任何待处理的情况下花费的时间
不提供服务时的请求，即不包含任何时间
闲置了cgroup的队列之一。这是在
纳秒。如果在cgroup处于空状态时读取了此内容，
统计信息将仅报告直到最后一次为止的empty_time
它有一个待处理的请求，并且将不包括当前增量。

-blkio.idle_time
-仅在CONFIG_BFQ_CGROUP_DEBUG = y时启用调试辅助。
这是IO调度程序在空闲状态下花费的时间
给cgroup期望比现有请求更好的请求
来自其他队列/ cgroup。以纳秒为单位。如果这读
当cgroup处于空闲状态时，统计信息将仅报告
idle_time累积到最后一个空闲时间，将不包括
当前增量。

-blkio.dequeue
-仅在CONFIG_BFQ_CGROUP_DEBUG = y时启用调试辅助。这个
提供有关组出队多少次的统计信息
从设备的服务树中。前两个字段指定专业
设备的次编号，第三个字段指定编号
从特定设备出队的次数。

-blkio。* _ recursive
-各种统计信息的递归版本。这些文件显示了
          与非递归对应的信息相同，但
          包括所有后代cgroup的统计信息。

节流/上限策略文件
-----------------------------------
-blkio.throttle.read_bps_device
-指定设备读取速率的上限。 IO率为
以每秒字节数指定。规则是针对每个设备的。以下是
格式：：

回声“ <主要>：<次要> <rate_bytes_per_second>”> /cgrp/blkio.throttle.read_bps_device

-blkio.throttle.write_bps_device
-指定写入设备的速率上限。 IO率为
以每秒字节数指定。规则是针对每个设备的。以下是
格式：：

回声“ <主要>：<次要> <rate_bytes_per_second>”> /cgrp/blkio.throttle.write_bps_device

-blkio.throttle.read_iops_device
-指定设备读取速率的上限。 IO率为
每秒IO中指定的值。规则是针对每个设备的。以下是
格式：：

回声“ <主要>：<次要> <rate_io_per_second>”> /cgrp/blkio.throttle.read_iops_device

-blkio.throttle.write_iops_device
-指定写入设备的速率上限。 IO率为
以io每秒指定。规则是针对每个设备的。以下是
格式：：

回声“ <主要>：<次要> <rate_io_per_second>”> /cgrp/blkio.throttle.write_iops_device

注意：如果为设备同时指定了BW和IOPS规则，则IO为
      受到两个约束。

-blkio.throttle.io_serviced
-该组向磁盘发布的IO（生物）数量。这些
按操作类型进一步划分-读取或写入，同步
或异步。前两个字段指定
设备，第三个字段指定操作类型，第四个字段
指定IO的数量。

-blkio.throttle.io_service_bytes
-组从磁盘传输到磁盘或从磁盘传输的字节数。这些
按操作类型进一步划分-读取或写入，同步
或异步。前两个字段指定
设备，第三个字段指定操作类型，第四个字段
指定字节数。

各种政策中的通用文件
-----------------------------------
-blkio.reset_stats
-将int写入此文件将导致重置所有统计信息
对于那个cgroup。
